<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
   -  Copyright 2013 Michal Turek, Another FSM
   -
   -      http://anotherfsm.sourceforge.net/
   -
   -  Licensed under the Apache License, Version 2.0 (the "License");
   -  you may not use this file except in compliance with the License.
   -  You may obtain a copy of the License at
   -
   -      http://www.apache.org/licenses/LICENSE-2.0
   -
   -  Unless required by applicable law or agreed to in writing, software
   -  distributed under the License is distributed on an "AS IS" BASIS,
   -  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   -  See the License for the specific language governing permissions and
   -  limitations under the License.
   -->

<project name="anotherfsm" basedir="." default="usage">
	<property name="projectName" value="Another FSM"/>
	<property name="version" value="0.1.0-dev"/><!-- See AnotherFsm.java -->
	<property name="author" value="Michal Turek" />
	<property name="projectWeb" value="http://anotherfsm.sourceforge.net/"/>
	<property name="jarname" value="${ant.project.name}-${version}.jar"/>
	<property name="builddir" value="build" />
	<property name="javac.target" value="1.7" />
	<property name="javac.source" value="1.7" />

	<path id="classpath">
		<pathelement location="${builddir}/classes" />
	</path>
	
	<path id="classpath-tests">
		<pathelement location="${builddir}/classes" />
		<pathelement location="/usr/share/java/junit4.jar" />
	</path>

	<target name="usage">
		<echo>
This ANT build scpript supports the following targets:

clean                - Clean all generated files.
compile              - Process all compile targets.
    compile-sources  - Compile all source codes.
    compile-examples - Compile all examples.
    compile-tests    - Compile all tests.
jar                  - Build jar packages.
javadoc              - Process all javadoc targets.
    javadoc-api      - Generate JavaDoc documentation.
    javadoc-full     - Generate full JavaDoc documentation.
dist                 - Copy files to the distribution directory.
all                  - Process full build.
		</echo>
	</target>
	
	<!-- Clean all generated files. -->
	<target name="clean">
		<delete dir="${builddir}" />
	</target>

	<!-- Initialize build. -->
	<target name="init">
		<tstamp />
		<mkdir dir="${builddir}/" />
	</target>
	
	<!-- Process all compile targets. -->
	<target name="compile" depends="compile-sources,compile-examples,compile-tests"/>

	<!-- Compile all source codes. -->
	<target name="compile-sources" depends="init">
		<mkdir dir="${builddir}/classes/" />
		<javac srcdir="src" destdir="${builddir}/classes"
			classpathref="classpath"
			source="${javac.source}"
			target="${javac.target}"
			encoding="utf8"
			includeAntRuntime="false"
			includeJavaRuntime="false"
			fork="false"
			deprecation="on"
			debug="on" />
	</target>
		
	<!-- Compile all examples. -->
	<target name="compile-examples" depends="compile-sources">
		<mkdir dir="${builddir}/classes_examples/" />
		<javac srcdir="src_examples" destdir="${builddir}/classes_examples"
			classpathref="classpath"
			source="${javac.source}"
			target="${javac.target}"
			encoding="utf8"
			includeAntRuntime="false"
			includeJavaRuntime="false"
			fork="false"
			deprecation="on"
			debug="on" />
	</target>
		
	<!-- Compile all tests. -->
	<target name="compile-tests" depends="compile-sources">
		<mkdir dir="${builddir}/classes_tests/" />
		<javac srcdir="src_tests" destdir="${builddir}/classes_tests"
			classpathref="classpath-tests"
			source="${javac.source}"
			target="${javac.target}"
			encoding="utf8"
			includeAntRuntime="false"
			includeJavaRuntime="false"
			fork="false"
			deprecation="on"
			debug="on" />
	</target>

	<!-- Build jar packages. -->
	<target name="jar" depends="init,compile-sources">
		<delete file="${builddir}/${jarname}" />
		
		<jar jarfile="${builddir}/${jarname}" basedir="${builddir}/classes">
			<manifest>
				<section name="net/sourceforge/anotherfsm">
					<attribute name="Implementation-Title" value="${projectName}" />
					<attribute name="Implementation-Version" value="${version}"/>
					<attribute name="Implementation-Vendor" value="${author}" />
					<attribute name="Built-Date" value="${TODAY}" />
				</section>
			</manifest>
			<metainf dir="." includes="NOTICE,LICENSE"/>
		</jar>
	</target>

	<!-- Process all javadoc targets. -->
	<target name="javadoc" depends="javadoc-api,javadoc-full"/>
	
	<!-- Generate JavaDoc documentation. -->
	<target name="javadoc-api">
		<javadoc
			sourcepath="src"
			destdir="${builddir}/doc"
			packagenames="net.sourceforge.anotherfsm.*"
			protected="true"
			author="true"
			nodeprecated="false"
			nodeprecatedlist="false"
			noindex="false"
			nonavbar="false"
			notree="false"
			source="${javac.source}"
			splitindex="true"
			use="true"
			version="true"
			classpathref="classpath"
			doctitle="${projectName} ${version}"
			windowtitle="${projectName}"
			bottom="&lt;i&gt;Copyright 2013 ${author}, &lt;a href=&quot;${projectWeb}&quot;&gt;${projectName}&lt;/a&gt;.&lt;/i&gt;"
		/>
	</target>
	
    <!-- Generate JavaDoc documentation including private members. -->
	<target name="javadoc-full">
		<javadoc
			sourcepath="src;src_examples;src_tests"
			destdir="${builddir}/doc_full"
			packagenames="net.sourceforge.anotherfsm.*"
			access="private"
			author="true"
			nodeprecated="false"
			nodeprecatedlist="false"
			noindex="false"
			nonavbar="false"
			notree="false"
			source="${javac.source}"
			splitindex="true"
			use="true"
			version="true"
			classpathref="classpath-tests"
			doctitle="${projectName} ${version}"
			windowtitle="${projectName}"
			bottom="&lt;i&gt;Copyright 2013 ${author}, &lt;a href=&quot;${projectWeb}&quot;&gt;${projectName}&lt;/a&gt;.&lt;/i&gt;"
		/>
	</target>
    
	<!-- Copy files to the distribution directory. -->
	<target name="dist" depends="jar,javadoc-api">
		<copy todir="${builddir}/dist/">
			<fileset file="${builddir}/${jarname}"/>
			<fileset file="LICENSE"/>
			<fileset file="NOTICE"/>
			<fileset file="build.xml"/>
		</copy>
		
		<copy todir="${builddir}/dist/src/">
			<fileset dir="src"/>
		</copy>
			
		<copy todir="${builddir}/dist/src_examples/">
			<fileset dir="src_examples"/>
		</copy>
		
		<copy todir="${builddir}/dist/src_tests/">
			<fileset dir="src_tests"/>
		</copy>
		
		<copy todir="${builddir}/dist/doc/">
			<fileset dir="${builddir}/doc/"/>
		</copy>
	</target>

    <!-- Process full build. -->
    <target name="all" depends="compile,jar,javadoc,dist"/>
</project>
